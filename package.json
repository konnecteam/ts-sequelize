{
  "name": "ts-sequelize",
  "description": "Multi dialect ORM for Node.JS on typescript",
  "version": "1.0.1",
  "author": "Guillaume Grimbert <ggrimbert@kimoce.com>",
  "contributors": [
    "Alexandre Genet <agenet@kimoce.com>",
    "Guillaume Poncioni <gponcioni@kimoce.com>"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/konnecteam/ts-sequelize.git"
  },
  "bugs": {
    "url": "https://github.com/konnecteam/ts-sequelize/issues"
  },
  "dependencies": {
    "bluebird": "^3.5.0",
    "cls-bluebird": "^2.1.0",
    "debug": "^3.1.0",
    "depd": "^1.1.0",
    "dottie": "^2.0.0",
    "esdoc-typescript-plugin": "^1.0.1",
    "generic-pool": "^3.4.0",
    "inflection": "1.12.0",
    "js-crc": "^0.1.0",
    "lodash": "^4.17.10",
    "moment": "^2.22.1",
    "moment-timezone": "^0.5.21",
    "retry-as-promised": "^3.0.0",
    "semver": "^5.5.0",
    "terraformer-wkt-parser": "^1.2.0",
    "toposort-class": "^1.0.1",
    "typedoc": "^0.11.1",
    "uuid": "^3.2.1",
    "validator": "^10.4.0",
    "wkx": "^0.4.5"
  },
  "devDependencies": {
    "@types/lodash": "^4.14.109",
    "@types/mocha": "^5.2.0",
    "blocked-at": "^1.1.2",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chai-datetime": "^1.5.0",
    "chai-spies": "^1.0.0",
    "cheerio": "^1.0.0-rc.2",
    "commitizen": "^2.9.6",
    "continuation-local-storage": "^3.2.0",
    "cross-env": "^5.1.6",
    "cz-conventional-changelog": "^2.0.0",
    "env-cmd": "^7.0.0",
    "esdoc": "^0.5.2",
    "eslint": "^4.6.0",
    "eslint-plugin-mocha": "^4.11.0",
    "hints": "^1.1.0",
    "husky": "^0.14.2",
    "istanbul": "^0.4.5",
    "lcov-result-merger": "^1.2.0",
    "mocha": "^5.2.0",
    "mssql": "^4.2.0",
    "mysql2": "^1.5.1",
    "pg": "^6.1.0",
    "pg-cursor": "^1.3.0",
    "pg-hstore": "^2.3.2",
    "pg-native": "^1.10.0",
    "pg-types": "^1.11.0",
    "rimraf": "^2.5.4",
    "semantic-release": "^12.2.2",
    "sinon": "^4.1.6",
    "sinon-chai": "^2.14.0",
    "sqlite3": "^3.1.13",
    "tedious": "2.6.2",
    "tslint": "5.6.0",
    "tslint-eslint-rules": "4.1.1",
    "tslint-no-unused-expression-chai": "^0.1.3",
    "typescript": "2.4.2",
    "typings": "^2.1.0",
    "typings-core": "^2.2.0",
    "uuid-validate": "^0.0.2",
    "validate-commit-msg": "^2.12.2"
  },
  "optionalDependencies": {
    "oracledb": "^2.2.0"
  },
  "keywords": [
    "mysql",
    "sqlite",
    "postgresql",
    "postgres",
    "mssql",
    "oracle",
    "typescript",
    "orm",
    "nodejs",
    "object relational mapper"
  ],
  "main": "build/index",
  "options": {
    "env_cmd": "./src/test/config/.docker.env",
    "mocha": "--globals setImmediate,clearImmediate --ui tdd --exit --check-leaks --colors -t 30000 --reporter spec"
  },
  "scripts": {
    "build": "tsc",
    "lint": "tslint -c tslint.json 'src/**/*.ts'",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-docker": "npm run test-docker-unit && npm run test-docker-integration",
    "test-docker-unit": "npm run test-unit",
    "test-docker-integration": "env-cmd $npm_package_options_env_cmd npm run test-integration",
    "docs": "typedoc --options ./typedoc.js && python -m mkdocs build",
    "teaser": "node -e \"console.log('#'.repeat(process.env.DIALECT.length + 22) + '\\n# Running tests for ' + process.env.DIALECT + ' #\\n' + '#'.repeat(process.env.DIALECT.length + 22))\"",
    "test-unit": "mocha $npm_package_options_mocha \"build/test/unit/**/*.js\"",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-oracle": "cross-env DIALECT=oracle npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-all": "npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite",
    "test-integration": "mocha $npm_package_options_mocha \"build/test/integration/**/*.test.js\"",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-oracle": "cross-env DIALECT=oracle npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-all": "npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-oracle": "cross-env DIALECT=oracle npm test",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-all": "npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mssql && npm run test-oracle",
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -t 30000 --exit --ui tdd \"build/test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -t 30000 --exit --ui tdd \"build/test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "sscce": "env-cmd $npm_package_options_env_cmd node sscce.js",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "commitmsg": "validate-commit-msg",
    "semantic-release": "semantic-release"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "license": "MIT",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "release": {
    "verifyConditions": [
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "typings": "build/index.d.ts"
}
